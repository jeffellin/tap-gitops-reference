#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
#@ def othersecret():
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: cert-manager-vault-token
  namespace: cert-manager
data:
  token: #@ base64.encode(data.values.vault.token)
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: vault-cluster-issuer
spec:
  vault:
    path: #@ "pki_int/sign/" + data.values.vault.role
    server: #@ "http://vault." + data.values.h2o.dns_subdomain + ":8200"
    auth:
      tokenSecretRef:
        name: cert-manager-vault-token
        key: token
#@ end
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: cert-manager
  namespace: #@ data.values.certmanager.namespace
  annotations:
    kapp.k14s.io/change-group: cert-manager
    kapp.k14s.io/change-rule: "delete after deleting tap"
    ext.packaging.carvel.dev/ytt-paths-from-secret-name.1: certmanager-security-overlay
spec:
  packageRef:
    refName: cert-manager.tanzu.vmware.com
    versionSelection:
      prereleases: {}
      constraints: #@ str(data.values.certmanager.version)
  serviceAccountName: tap-install-gitops-sa
---
apiVersion: v1
kind: Secret
metadata:
  name: certmanager-security-overlay
stringData:
  othersecret.yaml: #@ yaml.encode(othersecret())
