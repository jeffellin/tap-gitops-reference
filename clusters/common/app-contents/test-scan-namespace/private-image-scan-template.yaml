#! hack as this is a namespaced resource
#! need to export using kubectl get scantemplate private-image-scan-template -oyaml -n tap-install > common/app-contents/test-scan-namespace/private-image-scan-template.yaml
#! then removed all from metadata except name
#! Updated with TAP 1.3.0.b18
#@ load("@ytt:data", "data")

---
apiVersion: scanning.apps.tanzu.vmware.com/v1beta1
kind: ScanTemplate
metadata:
  name: blob-source-scan-template
spec:
  template:
    containers:
      - args:
          - process
          - -f
          - /workspace
        command:
          - /aggregator
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0a0c8ff1ccf4fc81d58a4e1d445d446667431b0ee50443c37cb59832dabb0da0
        imagePullPolicy: IfNotPresent
        name: summary
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: true
    imagePullSecrets:
      - name: scanner-secret-ref
    initContainers:
      - args:
          - -c
          - mkdir /workspace/source
        command:
          - /bin/bash
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad
        imagePullPolicy: IfNotPresent
        name: initialize-scanner-workspace
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
      - args:
          - -c
          - ./source/untar-gitrepository.sh $REPOSITORY /workspace/source
        command:
          - /bin/bash
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad
        imagePullPolicy: IfNotPresent
        name: repo
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
      - args:
          - -c
          - ./source/scan-source.sh /workspace/source/scan.xml /workspace/source/out.yaml
            /workspace/source/repo blob
        command:
          - /bin/bash
        env:
          - name: XDG_CACHE_HOME
            value: /.cache
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad
        imagePullPolicy: IfNotPresent
        name: scan-plugin
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
          - mountPath: /.cache
            name: cache
            readOnly: false
      - args:
          - -c
          - |
            set -euo pipefail
            if [[ -z ${METADATA_STORE_ACCESS_TOKEN:-""} ]]
            then
              METADATA_STORE_ACCESS_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
            fi
            /insight config set-target $METADATA_STORE_URL --ca-cert /metadata-store/ca.crt --access-token $METADATA_STORE_ACCESS_TOKEN
        command:
          - bash
        env:
          - name: METADATA_STORE_URL
            value: metadata-store.bb1.appref.end2end.link
          - name: METADATA_STORE_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                key: auth_token
                name: store-auth-token
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c
        imagePullPolicy: IfNotPresent
        name: metadata-store-plugin-config
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
          - mountPath: /.config/tanzu/insight
            name: insight-config
            readOnly: false
          - mountPath: /metadata-store
            name: metadata-store-ca-cert
            readOnly: true
      - args:
          - source
          - add
          - --cyclonedxtype
          - xml
          - --path
          - /workspace/source/scan.xml
        command:
          - /send-scan-results.sh
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c
        imagePullPolicy: IfNotPresent
        name: metadata-store-plugin
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
          - mountPath: /.config/tanzu/insight
            name: insight-config
            readOnly: false
      - args:
          - check
          - --policy
          - $(POLICY)
          - --scan-results
          - /workspace/source/scan.xml
          - --parser
          - xml
          - --format
          - yaml
          - --output
          - /workspace/compliance-plugin/out.yaml
        command:
          - /compliance
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:d8f1a44ee7eb697a6e3566d0e11181b459e34ade05ab8f64a9b2bcb7abe94d48
        imagePullPolicy: IfNotPresent
        name: compliance-plugin
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
    restartPolicy: Never
    securityContext:
      runAsNonRoot: true
    serviceAccountName: grype-scanner
    volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: insight-config
      - emptyDir: {}
        name: cache
      - name: metadata-store-ca-cert
        secret:
          secretName: store-ca-cert
  (⎈ |arn:aws:eks:us-east-1:266463974589:cluster/tap-bug-bash-view:default)➜  terraform git:(bugbash) ✗ k get scantemplate blob-source-scan-template -n tap-install -o yaml
  (⎈ |arn:aws:eks:us-east-1:266463974589:cluster/tap-bug-bash-view:default)➜  terraform git:(bugbash) ✗ k get scantemplate private-image-scan-template -n tap-install -o yaml
apiVersion: scanning.apps.tanzu.vmware.com/v1beta1
kind: ScanTemplate
metadata:
  annotations:
    kapp.k14s.io/identity: v1;tap-install/scanning.apps.tanzu.vmware.com/ScanTemplate/private-image-scan-template;scanning.apps.tanzu.vmware.com/v1beta1
    kapp.k14s.io/original: '{"apiVersion":"scanning.apps.tanzu.vmware.com/v1beta1","kind":"ScanTemplate","metadata":{"annotations":{"kbld.k14s.io/images":"-
      origins:\n  - preresolved:\n      url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c\n  url:
      registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c\n-
      origins:\n  - preresolved:\n      url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0a0c8ff1ccf4fc81d58a4e1d445d446667431b0ee50443c37cb59832dabb0da0\n  url:
      registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0a0c8ff1ccf4fc81d58a4e1d445d446667431b0ee50443c37cb59832dabb0da0\n-
      origins:\n  - preresolved:\n      url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad\n  url:
      registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad\n-
      origins:\n  - preresolved:\n      url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:d8f1a44ee7eb697a6e3566d0e11181b459e34ade05ab8f64a9b2bcb7abe94d48\n  url:
      registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:d8f1a44ee7eb697a6e3566d0e11181b459e34ade05ab8f64a9b2bcb7abe94d48\n"},"labels":{"kapp.k14s.io/app":"1662481565116619589","kapp.k14s.io/association":"v1.668426d94f7b048dc1f850d033ec5666"},"name":"private-image-scan-template","namespace":"tap-install"},"spec":{"template":{"containers":[{"args":["process","-f","/workspace"],"command":["/aggregator"],"image":"registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0a0c8ff1ccf4fc81d58a4e1d445d446667431b0ee50443c37cb59832dabb0da0","imagePullPolicy":"IfNotPresent","name":"summary","volumeMounts":[{"mountPath":"/workspace","name":"workspace","readOnly":true}]}],"imagePullSecrets":[{"name":"scanner-secret-ref"}],"initContainers":[{"args":["-c","./image/scan-image.sh
      /workspace /workspace/scan.xml true"],"command":["/bin/bash"],"env":[{"name":"SYFT_SCHEMA_VERSION","value":"3.3.2"},{"name":"FAIL_ON_SYFT_SCHEMA_ERRORS","value":"True"},{"name":"XDG_CACHE_HOME","value":"/.cache"},{"name":"DOCKER_CONFIG","value":"/.docker"}],"image":"registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad","imagePullPolicy":"IfNotPresent","name":"scan-plugin","resources":{"limits":{"cpu":"1000m"},"requests":{"cpu":"250m","memory":"128Mi"}},"volumeMounts":[{"mountPath":"/workspace","name":"workspace","readOnly":false},{"mountPath":"/.docker","name":"registry-cred","readOnly":true},{"mountPath":"/.cache","name":"cache","readOnly":false}]},{"args":["-c","set
      -euo pipefail\nif [[ -z ${METADATA_STORE_ACCESS_TOKEN:-\"\"} ]]\nthen\n  METADATA_STORE_ACCESS_TOKEN=$(cat
      /var/run/secrets/kubernetes.io/serviceaccount/token)\nfi\n/insight config set-target
      $METADATA_STORE_URL --ca-cert /metadata-store/ca.crt --access-token $METADATA_STORE_ACCESS_TOKEN\n"],"command":["bash"],"env":[{"name":"METADATA_STORE_URL","value":"metadata-store.bb1.appref.end2end.link"},{"name":"METADATA_STORE_ACCESS_TOKEN","valueFrom":{"secretKeyRef":{"key":"auth_token","name":"store-auth-token"}}}],"image":"registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c","imagePullPolicy":"IfNotPresent","name":"metadata-store-plugin-config","volumeMounts":[{"mountPath":"/workspace","name":"workspace","readOnly":false},{"mountPath":"/.config/tanzu/insight","name":"insight-config","readOnly":false},{"mountPath":"/metadata-store","name":"metadata-store-ca-cert","readOnly":true}]},{"args":["image","add","--cyclonedxtype","xml","--path","/workspace/scan.xml"],"command":["/send-scan-results.sh"],"image":"registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c","imagePullPolicy":"IfNotPresent","name":"metadata-store-plugin","volumeMounts":[{"mountPath":"/workspace","name":"workspace","readOnly":false},{"mountPath":"/.config/tanzu/insight","name":"insight-config","readOnly":false}]},{"args":["check","--policy","$(POLICY)","--scan-results","/workspace/scan.xml","--parser","xml","--format","yaml","--output","/workspace/compliance-plugin/out.yaml"],"command":["/compliance"],"image":"registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:d8f1a44ee7eb697a6e3566d0e11181b459e34ade05ab8f64a9b2bcb7abe94d48","imagePullPolicy":"IfNotPresent","name":"compliance-plugin","volumeMounts":[{"mountPath":"/workspace","name":"workspace","readOnly":false}]}],"restartPolicy":"Never","securityContext":{"runAsNonRoot":true},"serviceAccountName":"grype-scanner","volumes":[{"emptyDir":{},"name":"workspace"},{"name":"registry-cred","secret":{"items":[{"key":".dockerconfigjson","path":"config.json"}],"optional":true,"secretName":"registry-credentials"}},{"emptyDir":{},"name":"insight-config"},{"emptyDir":{},"name":"cache"},{"name":"metadata-store-ca-cert","secret":{"secretName":"store-ca-cert"}}]}}}'
    kapp.k14s.io/original-diff-md5: 58e0494c51d30eb3494f7c9198986bb9
    kbld.k14s.io/images: |
      - origins:
        - preresolved:
            url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c
        url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c
      - origins:
        - preresolved:
            url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0a0c8ff1ccf4fc81d58a4e1d445d446667431b0ee50443c37cb59832dabb0da0
        url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0a0c8ff1ccf4fc81d58a4e1d445d446667431b0ee50443c37cb59832dabb0da0
      - origins:
        - preresolved:
            url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad
        url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad
      - origins:
        - preresolved:
            url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:d8f1a44ee7eb697a6e3566d0e11181b459e34ade05ab8f64a9b2bcb7abe94d48
        url: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:d8f1a44ee7eb697a6e3566d0e11181b459e34ade05ab8f64a9b2bcb7abe94d48
  creationTimestamp: "2022-09-06T16:26:06Z"
  generation: 1
  labels:
    kapp.k14s.io/app: "1662481565116619589"
    kapp.k14s.io/association: v1.668426d94f7b048dc1f850d033ec5666
  name: private-image-scan-template
  namespace: tap-install
  resourceVersion: "13702"
  uid: 74462a61-35fe-4222-8637-5f8a930ba3a8
spec:
  template:
    containers:
      - args:
          - process
          - -f
          - /workspace
        command:
          - /aggregator
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0a0c8ff1ccf4fc81d58a4e1d445d446667431b0ee50443c37cb59832dabb0da0
        imagePullPolicy: IfNotPresent
        name: summary
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: true
    imagePullSecrets:
      - name: scanner-secret-ref
    initContainers:
      - args:
          - -c
          - ./image/scan-image.sh /workspace /workspace/scan.xml true
        command:
          - /bin/bash
        env:
          - name: SYFT_SCHEMA_VERSION
            value: 3.3.2
          - name: FAIL_ON_SYFT_SCHEMA_ERRORS
            value: "True"
          - name: XDG_CACHE_HOME
            value: /.cache
          - name: DOCKER_CONFIG
            value: /.docker
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:8ee5b74c5a2ba54a647b911f17f039ebbb8a561bddddced2655bc68c8669d7ad
        imagePullPolicy: IfNotPresent
        name: scan-plugin
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 250m
            memory: 128Mi
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
          - mountPath: /.docker
            name: registry-cred
            readOnly: true
          - mountPath: /.cache
            name: cache
            readOnly: false
      - args:
          - -c
          - |
            set -euo pipefail
            if [[ -z ${METADATA_STORE_ACCESS_TOKEN:-""} ]]
            then
              METADATA_STORE_ACCESS_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
            fi
            /insight config set-target $METADATA_STORE_URL --ca-cert /metadata-store/ca.crt --access-token $METADATA_STORE_ACCESS_TOKEN
        command:
          - bash
        env:
          - name: METADATA_STORE_URL
            value: metadata-store.bb1.appref.end2end.link
          - name: METADATA_STORE_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                key: auth_token
                name: store-auth-token
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c
        imagePullPolicy: IfNotPresent
        name: metadata-store-plugin-config
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
          - mountPath: /.config/tanzu/insight
            name: insight-config
            readOnly: false
          - mountPath: /metadata-store
            name: metadata-store-ca-cert
            readOnly: true
      - args:
          - image
          - add
          - --cyclonedxtype
          - xml
          - --path
          - /workspace/scan.xml
        command:
          - /send-scan-results.sh
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:0642da07864173697b9695b3b5c79b08849e2de43a6989aa2304c95935d1b17c
        imagePullPolicy: IfNotPresent
        name: metadata-store-plugin
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
          - mountPath: /.config/tanzu/insight
            name: insight-config
            readOnly: false
      - args:
          - check
          - --policy
          - $(POLICY)
          - --scan-results
          - /workspace/scan.xml
          - --parser
          - xml
          - --format
          - yaml
          - --output
          - /workspace/compliance-plugin/out.yaml
        command:
          - /compliance
        image: registry.tanzu.vmware.com/tanzu-application-platform/tap-packages@sha256:d8f1a44ee7eb697a6e3566d0e11181b459e34ade05ab8f64a9b2bcb7abe94d48
        imagePullPolicy: IfNotPresent
        name: compliance-plugin
        volumeMounts:
          - mountPath: /workspace
            name: workspace
            readOnly: false
    restartPolicy: Never
    securityContext:
      runAsNonRoot: true
    serviceAccountName: grype-scanner
    volumes:
      - emptyDir: {}
        name: workspace
      - name: registry-cred
        secret:
          items:
            - key: .dockerconfigjson
              path: config.json
          optional: true
          secretName: registry-credentials
      - emptyDir: {}
        name: insight-config
      - emptyDir: {}
        name: cache
      - name: metadata-store-ca-cert
        secret:
          secretName: store-ca-cert