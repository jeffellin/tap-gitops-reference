#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:json", "json")
---
#@ def config():
#@  return {
#@    "auths": {
#@      data.values.tap.credentials.tanzuNet.host: {
#@        "username": data.values.tap.credentials.tanzuNet.username,
#@        "password": data.values.tap.credentials.tanzuNet.password
#@      }
#@    }
#@  }
#@ end

#@ def registry_credentials_config():
#@  return {
#@    "auths": {
#@      data.values.tap.credentials.registry.host: {
#@        "username": data.values.tap.credentials.registry.username,
#@        "password": data.values.tap.credentials.registry.password
#@      }
#@    }
#@  }
#@ end

---
apiVersion: v1
kind: Secret
metadata:
  name: tap-registry
  namespace: tap-install
  annotations:
    kapp.k14s.io/change-rule: "delete after deleting tap"
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: #@ json.encode(config())
---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretExport
metadata:
  name: tap-registry
  namespace: tap-install
spec:
  toNamespaces:
  - '*'
---

apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: tap-install
  annotations:
    kapp.k14s.io/change-rule: "delete after deleting tap"
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: #@ json.encode(registry_credentials_config())
---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretExport
metadata:
  name: registry-credentials
  namespace: tap-install
spec:
  toNamespaces:
  - '*'
---